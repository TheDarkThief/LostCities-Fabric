plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+" 
}

version = project.mod_version
group = "com.github.mcjty"

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
    // To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //Libraries
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}


tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}


if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}



// task apiJar(type: Jar) {
//     classifier = "api"
//     from(sourceSets.main.output) {
//         include "mcjty/lostcities/api/**"
//     }
// }

// artifacts {
//     archives apiJar
// }

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
    publications{
        create('mavenJava', MavenPublication) {
            from components.java
            // artifact apiJar

            artifactId = project.archives_base_name
            pom {
                name = 'LostCities'
                description = 'Lost Cities'
                scm {
                    url = 'https://github.com/McJtyMods/LostCities'
                    connection = 'scm:git:git@github.com:McJtyMods/LostCities.git'
                    developerConnection = 'scm:git:git@github.com:McJtyMods/LostCities.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/McJtyMods/LostCities/issues'
                }
                licenses {
                    license {
                        name = 'MIT'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'McJty'
                        name = 'McJty'
                        roles = ['developer']
                    }
                }
            }
        }
    }
    repositories {
        if (System.getenv('local_maven') != null) {
            maven {
                name = 'local'
                url = 'file://' + System.getenv('local_maven')
            }
        }
    }
}


